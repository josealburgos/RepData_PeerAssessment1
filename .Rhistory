head(sales)
sales$qty.sales <- NULL
head(sales)
rm(sales)
sales <- data.frame(sales = round(rnorm(1000, 200, 40),0))
sales$qty <- ifelse(order<sales$sales, sales$qty <- order, sales$qty <- sales$sales)
head(sales)
sales
min(sales$sales, sales$qty)
order <- 300
sales$qty <- ifelse(order<sales$sales, sales$qty <- order, sales$qty <- sales$sales)
head(sales)
sales
order <- 201
sales
sales$qty <- ifelse(order<sales$sales, sales$qty <- order, sales$qty <- sales$sales)
sales
qtyleft <- ifelse(sales$qty< order),order - sales$qty, 0)
qtyleft <- ifelse(sales$qty< order,order - sales$qty, 0)
sales
sales$qtyleft <- ifelse(sales$qty< order,order - sales$qty, 0)
sales
order
profit <- function(order, sales){
sales$qty <- ifelse(order<sales$rsales, sales$qty <- order,
sales$qty <- sales$rsales)
sales$qtyleft <- ifelse(sales$qty< order,order - sales$qty, 0)
prof <- sales$qty*(salep-cost) + sakes$qtyleft*refund
}
profit(sales, order)
prof <- sales$qty*(salep-cost) + sakes$qtyleft*refund
prof <- sales$qty*(salep-cost) + sales$qtyleft*refund
prof
profit <- function(order, sales){
sales$qty <- ifelse(order<sales$rsales, sales$qty <- order,
sales$qty <- sales$rsales)
sales$qtyleft <- ifelse(sales$qty< order,order - sales$qty, 0)
prof <- sales$qty*(salep-cost) + sales$qtyleft*refund
}
profit(order, sales)
order
sales
rm(sales)
rm(prof)
sales <- data.frame(rsales = round(rnorm(1000, 200, 40),0))
profit(order, sales)
profit <- function(order, sales){
sales$qty <- ifelse(order<sales$rsales, sales$qty <- order,
sales$qty <- sales$rsales)
sales$qtyleft <- ifelse(sales$qty< order,order - sales$qty, 0)
prof <- sales$qty*(salep-cost) + sales$qtyleft*refund
prof
}
profit(order, sales)
order <- 150
profit(order, sales)
order <- seq(100,300, by =10)
sapply(order, profit,mean)
c <- profit( order, sales)
sapply(order, profit(sales),mean)
library(UsingR)
install.packages("UsingR")
library(UsingR)
father
data(father.son)
father.son
str(father.son)
x <- father.son$sheight
n <- length(x)
x <- father.son$sheight
n <- length(x)
B <- 10000
resamples <- matrix(sample(x,n * B, replace = TRUE),B, n)
resamples
head(resamples)
resamples(1,)
resamples[1,]
resampledMedians <- apply(resamples, 1, median)
hist(resampleMeidians)
hist(resampleMedians)
hist(resampledMedians)
median(x)
dir()
dir()
dir()
dir()
dir
search()
library(swirl)
swirl()
swirl()
swirl()
set.seed(1234)
x <- rnorm(12,mean=rep(1:3,each=4),sd=0.2)
y <- rnorm(12,mean=rep(c(1,2,1),each=4),sd=0.2)
dataFrame <- data.frame(x=x,y=y)
dataFrame
dist
match.call
pmatch
dist(dataFrame)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
transform
?transform
?mutate
mutate
setwd("~/clickcollect")
readdata <- function(){
type <- c(rep("character", 6), rep("numeric", 3), "character")
dat <- read.csv("data_chris_1.csv", header = TRUE, colClasses = type)
dat$CAL_DT <- as.Date(dat$CAL_DT)
dat <- dat[,c(1,4,6,9,10)]
names(dat) <- c("date", "site", "cust","purchases","type")
dat <<- dat[order(dat$cust, dat$type, dat$date), ]
}
ext <- function(x){
ccdate <- x[1,1]
mindate <- min(x[,1])
maxdate <- max(x[,1])
summary <- data.frame(ccdate, mindate,maxdate)
summary
}
readdata()
a <- rnorm(20, 80, 30)
b <- rnorm(20, 60, 40)
c <- 1:20
d <- sample(letters[1:2], 20)
d <- sample(letters[1:2], 20, replace = TRUE)
e <- data.frame(a,b,c,d,e)
e <- data.frame(a,b,c,d)
e
g <- ggplot(e, aes(c,b))
library(ggplot2)
g <- ggplot(e, aes(c,b))
g + geom_line() + facet_grid(~d.)
g <- ggplot(e, aes(c,b,d))
g + geom_line() + facet_grid(~d.)
g + geom_line() + facet_grid(d~.)
rm(g)
g <- ggplot(e, aes(c,b))
g + geom_line() + facet_grid(d~.)
vline <- data.frame(d = c(a,b), z = c(5, 10))
vline
p <- qplot(mpg, wt, data=mtcars, facets = vs ~ am)
vline.data <- data.frame(z = c(15, 20, 25, 30), vs = c(0, 0, 1, 1), am = c(0, 1, 0, 1))
p + geom_vline(aes(xintercept = z), vline.data)
vline.data
rm(a)
rm(b)
rm(c)
rm(d)
rm(vline.data)
vline <- data.frame(d = c(a,b), z = c(5, 10))
vline <- data.frame(d = c("a","b"), z = c(5, 10))
vline
rm(g)
rm(p)
g <- ggplot(e, aes(c,b))
g + geom_line() + facet_grid(d~.)
vline <- data.frame(d = c("a","b"), z = c(5, 10))
g + geom_vline(aes(xintercept = z), vline)
g <- ggplot(e, aes(c,b)) +
geom_line() + facet_grid(d~.)
g + geom_vline(aes(xintercept = z), vline)
g + geom_vline(aes(xintercept = z), vline, col = "red", lwd = 2)
rm(e, vline, g,)
rm(e, vline, g)
cust <- lapply(split(dat,dat$cust), ext)
custc <- do.call(rbind, cust)
custc$cust <- rownames(custc)
#calculates days to normalize to week
custc$mindays <- as.numeric(with(custc, (ccdate - mindate)))
custc$maxdays <- as.numeric(with(custc, (maxdate - ccdate)+1))
custc1 <- custc[,c(1,4)]
custc2 <- custc[, c(4:6)]
dat1 <- merge(dat, custc1, by = "cust")
dat1$ty <- ifelse(dat1$date < dat1$ccdate, "bef", "aft")
#bringin mindays and maxdays from custc2 to dat1
dat2 <- merge(dat1, custc2, by = "cust")
#aggregate dat2 by cust and ty
#merge again with custc1 max and min days
#normalize it to week, dividing purchase by days *7
library(dplyr)
dat3 <- tbl_df(dat2)
dat4 <- dat3 %>%
select(cust, purchases, ty,mindays, maxdays) %>%
group_by(cust, ty) %>%
summarize(purchases = sum(purchases), count = length(cust))
dat4 <- merge(dat4,custc2, by = "cust")
dat4$weekly <- ifelse(dat4$ty =="aft", dat4$purchases*7/dat4$maxdays,
dat4$purchases*7/dat4$mindays)
#creates exc field for aft and maxdays <10
dat4$exc <- ifelse(dat4$ty =="aft" & dat4$mindays <10, "n",
ifelse(dat4$ty =="bef" & dat4$maxdays <10, "n", "y"))
#eliminate customer with less than 5 transactions (bef and after)
#and select only the ones with exec = "y"
dat5 <- dat4[dat4$exc == "y" & dat4$count > 5,]
head(dat5)
cgraph <- c("10345860", "10347483")
ccgraph <- with(custc, custc[cust == cgraph,1])
datg <- dat[dat$cust == cgraph, c(1,3,4)]
datg <- with(datg, datg[order(cust, date),])
vline.data <- data.frame(z = as.Date(ccgraph), cust = cgraph)
vline.data
m <- ggplot(datg, aes(date, purchases))
m + geom_line() + geom_vline(aes(xintercept = z), vline.data) +
facet_grid(cust~.) + ggtitle("Purchase Pattern 2 Customers") +
xlab("Entered Click and Collect at Different Times")
str(vline.data)
str(datg)
vline.data <- data.frame(z = as.Date(ccgraph), cust = as.character(cgraph))
str(vline.data)
rm(vline.data)
vline.data <- data.frame(z = as.Date(ccgraph), cust = as.character(cgraph))
str(vline.data)
str(cgraph)
df <- data.frame(cgraph, datg)
df
vline.data <- data.frame(z = as.Date(ccgraph), cust = c("10345860", "10347483"))
str(vline.data)
vline.data
ccgraph
vline.dat
vline.data
rm(m)
m <- ggplot(datg, aes(date, purchases)) + geom_line()
m + geom_vline(aes(xintercept = z), vline.data) +
facet_grid(cust~.) + ggtitle("Purchase Pattern 2 Customers") +
xlab("Entered Click and Collect at Different Times")
head(datg)
vline.dat
vline.data
datg[datg$date == 2015-01-04,]
datg[datg$date == "2015-01-04",]
datg[datg$date == "2014-09-23",]
datg
vline.data
ccgraph
datg
str(vline.data)
vline.data$cust <- as.character(vline.data$cust)
str(vline.data)
m <- ggplot(datg, aes(date, purchases)) + geom_line()
m + geom_vline(aes(xintercept = z), vline.data) +
facet_grid(cust~.) + ggtitle("Purchase Pattern 2 Customers") +
xlab("Entered Click and Collect at Different Times")
m + #geom_vline(aes(xintercept = z), vline.data) +
facet_grid(cust~.) + ggtitle("Purchase Pattern 2 Customers") +
xlab("Entered Click and Collect at Different Times")
vline.data <- data.frame(z = ccgraph, cust = c("10345860", "10347483"))
m <- ggplot(datg, aes(date, purchases)) + geom_line()
m + geom_vline(aes(xintercept = z), vline.data) +
facet_grid(cust~.) + ggtitle("Purchase Pattern 2 Customers") +
xlab("Entered Click and Collect at Different Times")
head(dat4)
head(custc)
with(custc, custc[ccdata == mindate,])
with(custc, custc[ccdate == mindate,])
newc <- with(custc, custc[ccdate == mindate,])
with(newc, unique(cust))
newc
hist(newc)
head(newc)
with(newc, hist(maxdays))
with(newc, hist(maxdays, bin = 30))
with(newc, hist(maxdays, bin = 10))
?hist
with(newc, hist(maxdays, breaks = 10))
with(newc, hist(maxdays, breaks = 30))
with(newc, hist(maxdays, breaks = 40))
dat4
head(dat4)
with(dat4, dat4[ty == "bef" & mindays == 0,])
with(dat4, dat4[mindays == 0,])
with(dat4, table(count))
newc <- with(dat4, dat4[mindays == 0,])
with(newc, table(count))
with(newc, newc[count == 10, ]))
with(newc, newc[count == 10, ])
x <- quantile(newc$count)
x
with(newc, mean(newc[count > 5],7))
mean(newc[newc$count > 5],7))
mean(newc[newc$count > 5, 7])
length(newc[newc$count > 5, 7])
83*103*52
unique(newc$cust)
newc[newc$count == 1,]
length(newc[newc$count == 1,])
nrow(newc[newc$count == 1,])
unique(newc$cust)
vline.data
head(dat4)
dat4[dat4$cust == "10347483",]
custc[custc$cust == "10347483",]
m <- ggplot(datg, aes(date, purchases, col = ty))
m + geom_line() + facet_grid(cust~.) + ggtitle("Purchase Pattern 2 Customers") +
xlab("Entered Click and Collect at Different Times")
head(datg)
head(dat)
str(g)
summary(g)
ls()
?weekdays
setwd("~/github/repdata_peerassessment1")
dir()
?unzip
getwd()
dat <- read.csv("/activity/activit.csv", header = TRUE, sep =",")
dat <- read.csv("../activity/activit.csv", header = TRUE, sep =",")
dat <- read.csv("../activity/activity.csv", header = TRUE, sep =",")
dat <- read.csv("/activity/activity.csv", header = TRUE, sep =",")
dat <- read.csv("~/activity/activity.csv", header = TRUE, sep =",")
dat <- read.csv("./activity/activity.csv", header = TRUE, sep =",")
setwd("~/github/repdata_peerassessment1/activity")
dat <- read.csv(unz("activity", "activity.csv"))
dat <- read.table(unz("activity", "activity.csv"), header = T, sep = ",")
dat <- read.table(unzip("activity", "activity.csv"), header = T, sep = ",")
dat <- read.table(unzip(activity, "activity.csv"), header = T, sep = ",")
dat <- read.table(unzip("activity", "activity.csv"), header = T, sep = ",")
dat <- read.csv(unzip("activity", "activity.csv"), header = T, sep = ",")
dat <- read.csv(unzip("activity.zip", "activity.csv"), header = T, sep = ",")
head(dat)
with(dat, hist(steps))
with(dat, hist(steps, breaks = 300))
with(dat, hist(steps, breaks = 30))
with(dat, hist(steps, breaks = 30, xlim = c(0, 200)))
with(dat, hist(steps, breaks = 60, xlim = c(0, 200)))
with(dat, hist(steps, breaks = 60, xlim = c(0, 200), ..density..))
mean(dat$steps, na.rm = TRUE)
search()
dat <- tbl_df(dat)
dat
dat <- dat %>%
group_by(date)
mean(dat$steps, na.rm = TRUE)
dat <- dat %>%
group_by(date)%>%
hist(steps)
dat <- dat %>%
group_by(date)%>%
filter(!is.na(steps)%>%
hist(steps)
head(dat)
dat1 <- dat %>%
group_by(date)%>%
filter(!is.na(steps)
dat1
dat1 <- dat %>%
group_by(date)%>%
filter(!is.na(steps))
head(dat1)
hist(dat1$steps)
hist(dat1$steps, breaks = 30)
hist(dat1$steps, breaks = 30, xlim = c(0, 200))
mean(dat1$steps)
dim(dat1)
dim(dat)
dat1 <- dat %>%
group_by(date)%>%
filter(!is.na(steps))%>%
summaryze(steps = sum(steps))
dat1 <- dat %>%
group_by(date)%>%
filter(!is.na(steps))%>%
summarize(steps = sum(steps))
dim(dat1)
hist(dat1$steps)
mean(dat1$steps)
median(dat1$steps)
abline(v = mean(dat1$steps), col = "red", lwd = 1.5)
abline(v = median(dat1$steps), col = "blue", lwd = 1.5)
abline(v = mean(dat1$steps), col = "red", lwd = 2)
summary <- function(x) {c(average = mean(x), median = median(x))}
summary(dat1$steps)
head(dat)
plot(x=interval, y = steps, data = dat, type ="l")
with(dat, plot(x=interval, y = steps, type ="l"))
with(dat, plot(x=interval, y = mean(steps), type ="l"))
dat2 <- dat %>%
group_by(interval)%>%
filter(!is.na(steps))%>%
summarize(steps = mean(steps))
with(dat2, plot(x=interval, y = steps, type ="l"))
max(dat2$steps)
dat2
dat2[steps >200,]
dat2[dat2$steps >200,]
getwd()
?hist
?supress.m
??supress.m
head(dat2)
head(dat)
sum(is.na(dat$steps))
dat3 <- dat
dat3[is.na(dat3$steps)]
dat3[is.na(dat3$steps),3]
dat3[is.na(dat3$steps),c(1,3)]
mean(dat3[dat3$interval == 0, 1])
mean(dat3[dat3$interval == 0, 1], na.rm = TRUE)
dat3[dat3$interval == 0, 1]
mean(dat3[dat3$interval == 0, 1], rm.na = TRUE)
mean(dat3$steps, na.rm = T)
mean(dat3[dat3$interval == 0, 1], na.rm = TRUE)
b <- dat3[dat3$interval == 0, 1]
mean(b, na.rm = T)
b <- dat3[dat3$interval == 5, 1]
b
str(dat)
mean(dat3[dat3$interval == 0L, 1], na.rm = TRUE)
dat3$interval <- as.numeric(dat3$interval)
mean(dat3[dat3$interval == 0, 1], na.rm = TRUE)
b <- dat3[dat3$interval == 5, 1]
b
mean(b, na.rm = TRUE)
str(b)
dat2
rownames(dat2) <- dat2$interval
dat2
dat2[20]
rm(dat, b)
dat <- read.csv(unzip("activity.zip", "activity.csv"), header = T, sep = ",")
str(dat)
dat[dat$interval == 0,]
dat[dat$interval == 5,]
mean(dat[dat$interval == 5,], na.rm = TRUE)
mean(dat[dat$interval == 5,1], na.rm = TRUE)
mean(dat[dat$interval == 0,1], na.rm = TRUE)
head(dat)
rownames(dat) <- dat$interval
head(dat)
rownames(dat)
head(dat)
?rownames
dimnames(dat2)
dat[5]
dat[5,]
dat[rowname(5),]
head(dat)
dat[is.na(dat$steps) & dat$interval == 0, "steps"] <- mean(dat[dat$interval == 0, 1],
na.rm = T)
dat
head(dat)
head(dat[dat$interval == 0,],)
head(dat[dat$interval == 0,],50)
head(dat[dat$interval == 0,],500)
unique(dat$interval)
int <- unique(dat$interval)
int[2]
int[1]
int[5]
for (i in seq_along(int)){
dat[is.na(dat$steps) & dat$interval == int[i],
"steps"] <- mean(dat[dat$interval == int[i], 1],  na.rm = T)
}
head(dat)
head(dat,50)
head(dat,240)
head(dat,288)
with(dat, dat[interval == 2210,])
with(dat, dat[interval == 2210 & date = 2012_10-02,])
with(dat, dat[interval == 2210 & date = 2012-10-02,])
with(dat, dat[interval == 2210 & date = "2012-10-02",])
with(dat, dat[interval == 2210 & date == "2012-10-02",])
with(dat, dat[date == "2012-10-02",])
summary(dat3$steps)
dat3
head(dat)
str(dat)
dat$date <- as.Date(dat$date)
str(date)
str(dat)
?weekday
?weekdate
?weekdays
weekdays(dat[dat$date])
weekdays(dat[dat$date, "date"])
weekdays("2012-10-02")
weekdays(2012-10-02)
weekdays(as.Date(2012-10-02))
weekdays(dat[dat$date [1:200], "date"])
weekdays(dat[dat$date [1000:2000], "date"])
b <- unique(dat$date)
b
weekdays(b)
dat$day <- weekday(dat$date)
dat$day <- weekdays(dat$date)
dat
head(dat,100)
dat[100:300]
dat[100:300,]
dat$day <- ifelse(weekdays(dat$date) == "Saturday" | weekdays(dat$date) == "Sunday",
"weekend","weekday")
head(dat)
tail(dat)
unique(dat$day)
nrows(dat[dat$day == "weekday",])
nrow(dat[dat$day == "weekday",])
nrow(dat[dat$day == "weekend",])
12960+4608
head(dat3)
sum(is.na(dat3$steps))
dat <- read.csv(unzip("activity.zip", "activity.csv"), header = T, sep = ",")
#total NAs
sum(is.na(dat[dat$steps,1]))
dat <- read.csv(unzip("activity.zip", "activity.csv"), header = T, sep = ",")
b <- is.na(dat$steps)
sum(b)
sum(is.na(dat$steps))
